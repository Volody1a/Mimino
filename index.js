document.addEventListener('DOMContentLoaded', function() {
    // ==================== –ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é ====================
    const hamburger = document.querySelector('.hamburger');
    const menu = document.querySelector('.menu');
    
    if (hamburger && menu) {
        hamburger.addEventListener('click', function() {
            this.classList.toggle('active');
            menu.classList.toggle('active');
        });
    }

    // ==================== –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ ====================
    const serviceItems = document.querySelectorAll('.service-item');
    const modals = document.querySelectorAll('.modal');
    const closeButtons = document.querySelectorAll('.close');

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function openModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden'; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
            const modalContent = modal.querySelector('.modal-content');
            setTimeout(() => {
                modalContent.classList.add('active');
            }, 10);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–∞–π–¥–µ—Ä–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
            const slider = modal.querySelector('.slider');
            if (slider) initSlider(slider);
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function closeModal(modal) {
        const modalContent = modal.querySelector('.modal-content');
        modalContent.classList.remove('active');
        
        setTimeout(() => {
            modal.style.display = 'none';
            document.body.style.overflow = ''; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª
        }, 300);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    serviceItems.forEach(item => {
        item.addEventListener('click', function() {
            const modalId = this.getAttribute('data-modal');
            openModal(modalId);
        });
    });

    closeButtons.forEach(button => {
        button.addEventListener('click', function() {
            const modal = this.closest('.modal');
            closeModal(modal);
        });
    });

    modals.forEach(modal => {
        modal.addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal(this);
            }
        });
    });

    // ==================== –°–ª–∞–π–¥–µ—Ä ====================
    function initSlider(slider) {
        const track = slider.querySelector('.slider-track');
        const slides = slider.querySelectorAll('.slide');
        const prevBtn = slider.querySelector('.prev');
        const nextBtn = slider.querySelector('.next');
        
        if (!track || !slides.length || !prevBtn || !nextBtn) return;
        
        let currentIndex = 0;
        let slideWidth = slider.offsetWidth;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å–ª–∞–π–¥–æ–≤
        slides.forEach(slide => {
            slide.style.width = `${slideWidth}px`;
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —à–∏—Ä–∏–Ω—É –ø—Ä–∏ —Ä–µ—Å–∞–π–∑–µ –æ–∫–Ω–∞
        window.addEventListener('resize', function() {
            slideWidth = slider.offsetWidth;
            slides.forEach(slide => {
                slide.style.width = `${slideWidth}px`;
            });
            updateSliderPosition();
        });
        
        // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ —Å–ª–∞–π–¥–µ—Ä–∞
        function updateSliderPosition() {
            track.style.transform = `translateX(-${currentIndex * slideWidth}px)`;
        }
        
        // –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
        nextBtn.addEventListener('click', function() {
            if (currentIndex < slides.length - 1) {
                currentIndex++;
            } else {
                currentIndex = 0; // –í–æ–∑–≤—Ä–∞—Ç –∫ –ø–µ—Ä–≤–æ–º—É —Å–ª–∞–π–¥—É
            }
            updateSliderPosition();
        });
        
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        prevBtn.addEventListener('click', function() {
            if (currentIndex > 0) {
                currentIndex--;
            } else {
                currentIndex = slides.length - 1; // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–ª–∞–π–¥—É
            }
            updateSliderPosition();
        });
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        updateSliderPosition();
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–ª–∞–π–¥–µ—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const sliders = document.querySelectorAll('.slider');
    sliders.forEach(slider => {
        initSlider(slider);
    });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
document.addEventListener('DOMContentLoaded', function() {
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ)
    const config = {
        BOT_TOKEN: '7583652121:AAHPKhDWuHq9NNcqN5FFO4zvnzo8AYFAFPk',
        CHAT_ID: '752504401',
        get API_URL() { return `https://api.telegram.org/bot${this.BOT_TOKEN}/sendMessage`;}
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    initDatePickers();

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
    const bookingForm = document.getElementById('bookingForm');
    if (bookingForm) {
        bookingForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = getFormData();
            
            if (!validateForm(formData)) return;
            
            setLoadingState(true);
            
            try {
                await sendFormData(formData);
                showAlert('success', '‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
                bookingForm.reset();
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
                handleSendError(error);
            } finally {
                setLoadingState(false);
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏–∏
    function initDatePickers() {
        flatpickr("#checkin", {
            locale: "ru",
            minDate: "today",
            dateFormat: "d.m.Y",
            onChange: function(selectedDates) {
                const minCheckout = new Date(selectedDates[0].getTime() + 86400000);
                flatpickr("#checkout").set("minDate", minCheckout);
            }
        });

        flatpickr("#checkout", {
            locale: "ru",
            minDate: new Date().fp_incr(1),
            dateFormat: "d.m.Y"
        });
    }

    function getFormData() {
        return {
            name: document.getElementById('name').value.trim(),
            phone: document.getElementById('phone').value.trim(),
            checkin: document.getElementById('checkin').value,
            checkout: document.getElementById('checkout').value,
            house: document.getElementById('house').value,
            date: new Date().toLocaleString('ru-RU')
        };
    }

    function validateForm(data) {
        const errors = [];
        
        if (!data.name || data.name.length < 2) {
            errors.push('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è');
        }
        
        if (!data.phone || !/^[\d\+\(\)\s-]{7,}$/.test(data.phone)) {
            errors.push('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω');
        }
        
        if (!data.checkin || !data.checkout) {
            errors.push('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—ã –∑–∞–µ–∑–¥–∞ –∏ –≤—ã–µ–∑–¥–∞');
        }
        
        if (!data.house) {
            errors.push('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–º–∏–∫–∞');
        }
        
        if (errors.length > 0) {
            showAlert('error', errors.join('<br>'));
            return false;
        }
        
        return true;
    }

    async function sendFormData(data) {
        const text = formatMessage(data);
        const response = await fetch(config.API_URL, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: config.CHAT_ID,
                text: text,
                parse_mode: 'HTML'
            })
        });
        
        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.description || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
        }
    }

    function formatMessage(data) {
        return `üìå <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</b>\n\n` +
               `üè† <b>–î–æ–º–∏–∫:</b> ${getHouseName(data.house)}\n` +
               `üë§ <b>–ò–º—è:</b> ${data.name}\n` +
               `üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>${data.phone}</code>\n` +
               `üìÖ <b>–î–∞—Ç—ã:</b> ${data.checkin} ‚Üí ${data.checkout}\n\n` +
               `‚è∞ ${data.date}`;
    }

    function getHouseName(value) {
        const houses = {
            'house1': 'üè° –°—Ç–∞–Ω–¥–∞—Ä—Ç (2 —á–µ–ª)',
            'house2': 'üè† –ö–æ–º—Ñ–æ—Ä—Ç (4 —á–µ–ª)',
            'house3': 'üåü VIP –¥–æ–º–∏–∫'
        };
        return houses[value] || value;
    }

    function setLoadingState(isLoading) {
        const btn = document.querySelector('#bookingForm button[type="submit"]');
        if (isLoading) {
            btn.disabled = true;
            btn.querySelector('.btn-text').style.display = 'none';
            btn.querySelector('.btn-spinner').style.display = 'inline-block';
        } else {
            btn.disabled = false;
            btn.querySelector('.btn-text').style.display = 'inline-block';
            btn.querySelector('.btn-spinner').style.display = 'none';
        }
    }

    function showAlert(type, message) {
        const alertsContainer = document.getElementById('formAlerts');
        const alert = document.createElement('div');
        alert.className = `alert alert-${type}`;
        alert.innerHTML = message;
        alertsContainer.appendChild(alert);
        
        setTimeout(() => {
            alert.remove();
        }, 5000);
    }

    function handleSendError(error) {
        let errorMessage = '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º.';
        
        if (error.message.includes('chat not found')) {
            errorMessage = '–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞';
        } else if (error.message.includes('bot was blocked')) {
            errorMessage = '–ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
        }
        
        showAlert('error', errorMessage);
    }
});

// –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∫ —è–∫–æ—Ä—è–º —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –æ—Ç—Å—Ç—É–ø–æ–º
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
        e.preventDefault();
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ (–¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏)
        const menu = document.querySelector('.menu');
        if (menu && menu.classList.contains('active')) {
            menu.classList.remove('active');
            document.querySelector('.hamburger').classList.remove('active');
        }
        
        const targetId = this.getAttribute('href');
        if (targetId === '#') return;
        
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
            // –í—ã—Å–æ—Ç–∞ —Ö–µ–¥–µ—Ä–∞ + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø (–≤ –ø–∏–∫—Å–µ–ª—è—Ö)
            const headerHeight = document.querySelector('.header') ? 
                               document.querySelector('.header').offsetHeight : 0;
            const extraOffset = -100; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø (–º–æ–∂–Ω–æ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å)
            const totalOffset = headerHeight + extraOffset;
            
            const targetPosition = targetElement.getBoundingClientRect().top + 
                                 window.pageYOffset - 
                                 totalOffset;
            
            window.scrollTo({
                top: targetPosition,
                behavior: 'smooth'
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            history.pushState(null, null, targetId);
        }
    });
});